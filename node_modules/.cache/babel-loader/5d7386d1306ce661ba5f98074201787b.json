{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Lea/Desktop/ITC/Projects/react-project-1-notes-BenyaminLea/src/components/NoteItem.js\";\nimport \"./NoteItem.css\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#root\");\n\nclass NoteItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      title: this.props.title,\n      note: this.props.note,\n      dateReadable: this.props.dateReadable,\n      dateUpdated: \"\",\n      updated: false\n    };\n  }\n\n  onDelete(event) {\n    this.props.onDeleteNote(event.target.id);\n  }\n\n  onOpenModal() {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  onCloseModal() {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  handleNoteChange(event) {\n    let date = new Date().toString();\n    date = date.slice(4, 10) + date.slice(15, 21);\n    this.setState({\n      note: event.target.value,\n      dateUpdated: date\n    });\n  }\n\n  handleTitleChange(event) {\n    let date = new Date().toString();\n    date = date.slice(4, 10) + date.slice(15, 21);\n    this.setState({\n      title: event.target.value,\n      dateUpdated: date\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.onOpenModal(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: this.props.dateCreated,\n          onClick: event => this.onDelete(event),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note\",\n          children: this.state.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [\"Created : \", this.state.dateReadable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.states.updated ? \"date hidden\" : \"\",\n          children: this.state.dateUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isOpen,\n        onRequestClose: () => this.onCloseModal(),\n        style: {\n          overlay: {\n            backgroundColor: \"grey\"\n          },\n          content: {\n            width: \"300px\",\n            height: \"300px\",\n            top: \"25%\",\n            left: \"25%\",\n            right: \"auto\",\n            bottom: \"auto\"\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.onCloseModal(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            id: \"title\",\n            placeholder: \"A title for your note?\",\n            value: this.state.title,\n            onChange: event => this.handleTitleChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            name: \"note\",\n            id: \"note\",\n            required: true,\n            placeholder: \"Your note ...\",\n            value: this.state.note,\n            onChange: event => this.handleNoteChange(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NoteItem;","map":{"version":3,"sources":["/Users/Lea/Desktop/ITC/Projects/react-project-1-notes-BenyaminLea/src/components/NoteItem.js"],"names":["React","Modal","setAppElement","NoteItem","Component","constructor","props","state","isOpen","title","note","dateReadable","dateUpdated","updated","onDelete","event","onDeleteNote","target","id","onOpenModal","setState","onCloseModal","handleNoteChange","date","Date","toString","slice","value","handleTitleChange","render","dateCreated","states","overlay","backgroundColor","content","width","height","top","left","right","bottom"],"mappings":"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","sourcesContent":["import \"./NoteItem.css\";\nimport React from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nclass NoteItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      title: this.props.title,\n      note: this.props.note,\n      dateReadable: this.props.dateReadable,\n      dateUpdated: \"\",\n      updated: false,\n    };\n  }\n  onDelete(event) {\n    this.props.onDeleteNote(event.target.id);\n  }\n  onOpenModal() {\n    this.setState({ isOpen: true });\n  }\n\n  onCloseModal() {\n    this.setState({ isOpen: false });\n  }\n\n  handleNoteChange(event) {\n    let date = new Date().toString();\n    date = date.slice(4, 10) + date.slice(15, 21);\n    this.setState({ note: event.target.value, dateUpdated: date });\n  }\n\n  handleTitleChange(event) {\n    let date = new Date().toString();\n    date = date.slice(4, 10) + date.slice(15, 21);\n    this.setState({ title: event.target.value, dateUpdated: date });\n  }\n\n  render() {\n    return (\n      <div>\n        <li onClick={() => this.onOpenModal()}>\n          <button\n            id={this.props.dateCreated}\n            onClick={(event) => this.onDelete(event)}\n          >\n            Delete\n          </button>\n          <div className=\"title\">{this.state.title}</div>\n          <div className=\"note\">{this.state.note}</div>\n          <div className=\"date\">Created : {this.state.dateReadable}</div>\n          <div className={this.states.updated ? \"date hidden\" : \"\"}>\n            {this.state.dateUpdated}\n          </div>\n        </li>\n        <Modal\n          isOpen={this.state.isOpen}\n          onRequestClose={() => this.onCloseModal()}\n          style={{\n            overlay: { backgroundColor: \"grey\" },\n            content: {\n              width: \"300px\",\n              height: \"300px\",\n              top: \"25%\",\n              left: \"25%\",\n              right: \"auto\",\n              bottom: \"auto\",\n            },\n          }}\n        >\n          <button onClick={() => this.onCloseModal()}>Close</button>\n          <div>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"A title for your note?\"\n              value={this.state.title}\n              onChange={(event) => this.handleTitleChange(event)}\n            />\n          </div>\n          <div>\n            <textarea\n              type=\"text\"\n              name=\"note\"\n              id=\"note\"\n              required\n              placeholder=\"Your note ...\"\n              value={this.state.note}\n              onChange={(event) => this.handleNoteChange(event)}\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default NoteItem;\n"]},"metadata":{},"sourceType":"module"}